---
# simple configuration with extraction of soma report, without features
version: 2
simulation_campaign: /gpfs/bbp.cscs.ch/project/proj12/NSE/blueetl/data/sim-campaign-bluepy/11567ba9-57fa-41ec-ac7b-d727ec4e65f3/config.json
output: analysis_output
analysis:
  soma:
    extraction:
      report:
        type: soma
        name: soma
      neuron_classes:
        L1_EXC: { layer: [ 1 ], synapse_class: [ EXC ] }
        L23_EXC: { layer: [ 2, 3 ], synapse_class: [ EXC ] }
        L4_EXC: { layer: [ 4 ], synapse_class: [ EXC ] }
        L5_EXC: { layer: [ 5 ], synapse_class: [ EXC ] }
        L6_EXC: { layer: [ 6 ], synapse_class: [ EXC ] }
        L1_INH: { layer: [ 1 ], synapse_class: [ INH ] }
        L23_INH: { layer: [ 2, 3 ], synapse_class: [ INH ] }
        L4_INH: { layer: [ 4 ], synapse_class: [ INH ] }
        L5_INH: { layer: [ 5 ], synapse_class: [ INH ] }
        L6_INH: { layer: [ 6 ], synapse_class: [ INH ] }
      limit: null
      target: null
      windows:
        w1: { bounds: [ 20, 90 ], window_type: spontaneous }
        w2: { bounds: [ 10, 70 ], initial_offset: 10, t_step: 0.5 }
    features:
      - type: multi
        groupby: [ simulation_id, circuit_id, neuron_class, window ]
        function: blueetl.external.soma.calculate_features.calculate_features_by_simulation_circuit_neuron_class_window
      - type: multi
        groupby: [ simulation_id, circuit_id ]
        function: blueetl.external.soma.calculate_features.calculate_features_by_simulation_circuit
