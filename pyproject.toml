[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "blueetl"
description = "Multiple simulations analysis tool"
readme = "README.rst"
requires-python = ">=3.9"
license = { file = "LICENSE.txt" }
authors = [
    { name = "Blue Brain Project, EPFL" },
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dependencies = [
    "blueetl-core>=0.1.0",
    "bluepysnap>=1.0.7",
    "click>=8",
    "jsonschema>=4.0",
    "numpy>=1.19.4",
    "pandas>=1.3.0",
    "pyarrow>=7", # needed by pandas to read and write feather or parquet files
    "pydantic>=2",
    "pyyaml>=5.4.1",
    "xarray>=0.18.0",
]
dynamic = ["version"]

[project.optional-dependencies]
extra = [
    # extra requirements that may be dropped at some point
    "bluepy>=2.5.2",
    "fastparquet>=0.8.3,!=2023.1.0", # needed by pandas to read and write parquet files
    "orjson", # faster json decoder used by fastparquet
    "tables>=3.6.1", # needed by pandas to read and write hdf files
]
external = [
    # external requirements needed to run custom code in blueetl.external submodule
    "elephant>=0.10.0",
    "matplotlib>=3.4.3",
    "quantities>=0.13.0",
    "scipy>=1.8.0",
    "seaborn>=0.11.2",
]
docs = [
    "sphinx",
    "sphinx-bluebrain-theme",
    "sphinx-jsonschema",
    "sphinxcontrib-programoutput",
    "myst-nb",
]
all = ["blueetl[extra,external]"]

[project.urls]
Homepage = "https://github.com/BlueBrain/blueetl"
Repository = "https://github.com/BlueBrain/blueetl.git"
Documentation = "https://blueetl.readthedocs.io/"
Tracker = "https://github.com/BlueBrain/blueetl/issues"

[project.scripts]
blueetl = "blueetl.apps.main:cli"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_file = "src/blueetl/_version.py"

[tool.black]
line-length = 100
target-version = ["py39"]
include = 'src/blueetl\/.*\.py$|tests\/.*\.py$|doc\/source\/conf\.py$|setup\.py$'

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "UP", # pyupgrade
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
filterwarnings = [
    "ignore::DeprecationWarning:nptyping",
]
log_level = "DEBUG"


[tool.coverage.paths]
source = [
    "src",
    "*/site-packages",
]

[tool.coverage.run]
branch = true
parallel = false
omit = [
    "src/blueetl/_version.py",
]

[tool.coverage.report]
show_missing = true
precision = 0
fail_under = 80

[tool.pydocstyle]
# D413: no blank line after last section
add_ignore = "D413"
convention = "google"

[tool.pylint.main]
# Files or directories to be skipped. They should be base names, not paths.
ignore = ["CVS", "_version.py"]
# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code.
extension-pkg-allow-list = ["numpy", "lxml", "pydantic"]
# List of plugins (as comma separated values of python module names) to load,
# usually to register additional checkers.
load-plugins = ["pylint_pydantic"]

[tool.pylint.design]
# Maximum number of arguments for function / method.
max-args = 8
# Maximum number of attributes for a class (see R0902).
max-attributes = 40
# Maximum number of boolean expressions in an if statement (see R0916).
#max-bool-expr = 5
# Maximum number of branch for function / method body.
max-branches = 12
# Maximum number of locals for function / method body.
max-locals = 15
# Maximum number of parents for a class (see R0901).
max-parents = 7
# Minimum number of public methods for a class (see R0903).
min-public-methods = 0
# Maximum number of public methods for a class (see R0904).
max-public-methods = 60
# Maximum number of return / yield for function / method body.
max-returns = 6
# Maximum number of statements in function / method body.
max-statements = 50

[tool.pylint.format]
# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines = "\\bhttps?://\\S"
# Maximum number of characters on a single line.
max-line-length = 100

[tool.pylint."messages control"]
disable = ["fixme", "invalid-name", "len-as-condition", "no-else-return"]

[tool.pylint.similarities]
# Comments are removed from the similarity computation
ignore-comments = true
# Docstrings are removed from the similarity computation
ignore-docstrings = true
# Minimum lines number of a similarity.
min-similarity-lines = 25

[tool.pylint.typecheck]
# List of class names for which member attributes should not be checked (useful
# for classes with dynamically set attributes). This supports the use of
# qualified names.
ignored-classes = ["numpy", "list"]

[tool.pylint.variables]
# Argument names that match this expression will be ignored.
ignored-argument-names = "_.*"
