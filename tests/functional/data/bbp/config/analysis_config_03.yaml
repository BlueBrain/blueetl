# configuration where neuron classes are specified using subtargets
version: 3
simulation_campaign: /gpfs/bbp.cscs.ch/project/proj12/NSE/blueetl/data/sim-campaign-bluepy/11567ba9-57fa-41ec-ac7b-d727ec4e65f3/config.json
output: analysis_output
analysis:
  spikes:
    extraction:
      report:
        type: spikes
      neuron_classes:
        L1_EXC: {query: {layer: [1]}, node_set: Excitatory}
        L23_EXC: {query: {layer: [2, 3]}, node_set: Excitatory}
        L4_EXC: {query: {layer: [4]}, node_set: Excitatory}
        L5_EXC: {query: {layer: [5]}, node_set: Excitatory}
        L6_EXC: {query: {layer: [6]}, node_set: Excitatory}
        L1_INH: {query: {layer: [1]}, node_set: Inhibitory}
        L23_INH: {query: {layer: [2, 3]}, node_set: Inhibitory}
        L4_INH: {query: {layer: [4]}, node_set: Inhibitory}
        L5_INH: {query: {layer: [5]}, node_set: Inhibitory}
        L6_INH: {query: {layer: [6]}, node_set: Inhibitory}
      limit: null
      windows:
        w1: {bounds: [20, 90], window_type: spontaneous}
        w2: {bounds: [10, 70], initial_offset: 10, n_trials: 3, trial_steps_value: 10}
    features:
    - type: multi
      groupby: [simulation_id, circuit_id, neuron_class, window]
      function: blueetl.external.bnac.calculate_features.calculate_features_multi
      params: {export_all_neurons: true}
