[base]
name = blueetl
path = src/blueetl
testdeps =
    pytest
    pytest-lazy-fixture

[tox]
envlist =
    check-version
    check-packaging
    lint
    py{39,310}

minversion = 3.1.0

# ignore basepython for envs that already specify a version
ignore_basepython_conflict = true

[testenv]
basepython=python3.10
setenv =
    PIP_INDEX_URL=https://bbpteam.epfl.ch/repository/devpi/simple
    # Run serially
    BLUEETL_JOBLIB_JOBS=1
extras =
    all
deps = {[base]testdeps}
commands = python -m pytest -vs tests/unit {posargs}

[testenv:functional]
setenv =
    {[testenv]setenv}
    # Run in parallel using half of the CPUs
    BLUEETL_JOBLIB_JOBS=
deps =
    {[base]testdeps}
    brion;platform_system=='Linux'
commands = python -m pytest -vs tests/functional {posargs}

[testenv:check-version]
skip_install = true
deps = bbp-nse-ci>=0.4.2
commands = do_release.py -p . check-version

[testenv:check-packaging]
skip_install = true
deps =
    wheel
    twine
    build
commands_pre =
    rm -Rf {envtmpdir}/dist src/{[base]name}.egg-info
commands =
    python -m build --outdir {envtmpdir}/dist
    twine check {envtmpdir}/dist/*
allowlist_externals = rm

[testenv:lint]
deps =
    ruff
    pycodestyle
    pydocstyle
    pylint
    pylint-pydantic
    isort
    black[jupyter]
    mypy
    types-PyYAML
    click!=8.1.4  # Remove after https://github.com/pallets/click/issues/2558 is resolved
commands =
    ruff check {[base]path}
    pycodestyle {[base]path}
    pydocstyle {[base]path}
    pylint {[base]path}
    isort --check-only --diff {[base]path}
    black --check .
    mypy --show-error-codes --ignore-missing-imports --allow-redefinition {[base]path}

[testenv:format]
deps =
    pyupgrade
    autoflake
    isort
    black[jupyter]
commands =
    find {[base]path} -type f -name '*.py' -exec pyupgrade --py39-plus {} ;
    autoflake -ir --remove-all-unused-imports --ignore-init-module-imports {[base]path}
    isort {[base]path}
    black .
allowlist_externals = find

[testenv:coverage]
deps =
    {[base]testdeps}
    coverage[toml]
    pytest-cov
    brion;platform_system=='Linux'
commands =
    python -m pytest --cov={[base]name} tests/ {posargs}
    coverage xml
    coverage html

[testenv:docs]
changedir = doc
extras =
    all
    docs
# set warnings as errors using the -W sphinx option
# if the notebooks execution fails, it can be overridden: SPHINXOPTS= tox -e docs
commands = make clean html SPHINXOPTS={env:SPHINXOPTS:-W}
allowlist_externals = make

[pycodestyle]
# E203: whitespace before ':'
# E731: do not assign a lambda expression, use a def
# W503: line break after binary operator
# W504: line break before binary operator
# E501: line too long (checked with pylint)
ignore = E203,E731,W503,W504,E501

[pydocstyle]
# D413: no blank line after last section
add-ignore = D413
convention = google
